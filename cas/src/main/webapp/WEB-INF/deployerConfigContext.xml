<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:ldaptive="http://www.ldaptive.org/schema/spring-ext"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.ldaptive.org/schema/spring-ext http://www.ldaptive.org/schema/spring-ext.xsd
       http://www.ldaptive.org/schema/spring-ext       http://www.ldaptive.org/schema/spring-ext.xsd">

    <!--<ldaptive:ad-authenticator id="authenticator"-->
                               <!--ldapUrl="${ldap.url}"-->
                               <!--userFilter="${ldap.authn.searchFilter}"-->
                               <!--bindDn="${ldap.managerDn}"-->
                               <!--bindCredential="${ldap.managerPassword}"-->
                               <!--allowMultipleDns="${ldap.allowMultipleDns:false}"-->
                               <!--connectTimeout="${ldap.connectTimeout}"-->
                               <!--validateOnCheckOut="${ldap.pool.validateOnCheckout}"-->
                               <!--failFastInitialize="true"-->
                               <!--blockWaitTime="${ldap.pool.blockWaitTime}"-->
                               <!--idleTime="${ldap.pool.idleTime}"-->
                               <!--baseDn="${ldap.baseDn}"-->
                               <!--maxPoolSize="${ldap.pool.maxSize}"-->
                               <!--minPoolSize="${ldap.pool.minSize}"-->
                               <!--validatePeriodically="${ldap.pool.validatePeriodically}"-->
                               <!--validatePeriod="${ldap.pool.validatePeriod}"-->
                               <!--prunePeriod="${ldap.pool.prunePeriod}"-->
                               <!--useSSL="${ldap.use.ssl:false}"-->
                               <!--subtreeSearch="${ldap.subtree.search:true}"-->
                               <!--useStartTLS="${ldap.useStartTLS}" />-->

    <!--<ldaptive:bind-search-authenticator id="authenticator"-->
                                        <!--ldapUrl="${ldap.url}"-->
                                        <!--baseDn="${ldap.baseDn}"-->
                                        <!--userFilter="${ldap.authn.searchFilter}"-->
                                        <!--bindDn="${ldap.managerDn}"-->
                                        <!--bindCredential="${ldap.managerPassword}"-->
                                        <!--connectTimeout="${ldap.connectTimeout}"-->
                                        <!--useStartTLS="${ldap.useStartTLS}"-->
                                        <!--blockWaitTime="${ldap.pool.blockWaitTime}"-->
                                        <!--maxPoolSize="${ldap.pool.maxSize}"-->
                                        <!--allowMultipleDns="${ldap.allowMultipleDns:false}"-->
                                        <!--usePasswordPolicy="${ldap.usePpolicy:false}"-->
                                        <!--minPoolSize="${ldap.pool.minSize}"-->
                                        <!--validateOnCheckOut="${ldap.pool.validateOnCheckout}"-->
                                        <!--validatePeriodically="${ldap.pool.validatePeriodically}"-->
                                        <!--validatePeriod="${ldap.pool.validatePeriod}"-->
                                        <!--idleTime="${ldap.pool.idleTime}"-->
                                        <!--prunePeriod="${ldap.pool.prunePeriod}"-->
                                        <!--failFastInitialize="true"-->
                                        <!--subtreeSearch="${ldap.subtree.search:true}"-->
                                        <!--useSSL="${ldap.use.ssl:false}"-->
    <!--/>-->

    <ldaptive:anonymous-search-authenticator id="authenticator"
                                             ldapUrl="${ldap.url}"
                                             connectTimeout="${ldap.connectTimeout}"
                                             validateOnCheckOut="${ldap.pool.validateOnCheckout}"
                                             failFastInitialize="true"
                                             blockWaitTime="${ldap.pool.blockWaitTime}"
                                             idleTime="${ldap.pool.idleTime}"
                                             maxPoolSize="${ldap.pool.maxSize}"
                                             minPoolSize="${ldap.pool.minSize}"
                                             validatePeriodically="${ldap.pool.validatePeriodically}"
                                             validatePeriod="${ldap.pool.validatePeriod}"
                                             prunePeriod="${ldap.pool.prunePeriod}"
                                             useSSL="${ldap.use.ssl:false}"
                                             useStartTLS="${ldap.useStartTLS}"
                                             usePasswordPolicy="${ldap.usePpolicy:true}"
                                             allowMultipleDns="${ldap.allowMultipleDns:false}"
                                             baseDn="${ldap.baseDn}"
                                             subtreeSearch="${ldap.subtree.search:true}"
                                             userFilter="${ldap.authn.searchFilter}"
    />

    <!--<ldaptive:direct-authenticator id="authenticator"-->
                                   <!--format="${ldap.authn.searchFilter}"-->
                                   <!--ldapUrl="${ldap.url}"-->
                                   <!--connectTimeout="${ldap.connectTimeout}"-->
                                   <!--validateOnCheckOut="${ldap.pool.validateOnCheckout}"-->
                                   <!--failFastInitialize="true"-->
                                   <!--blockWaitTime="${ldap.pool.blockWaitTime}"-->
                                   <!--idleTime="${ldap.pool.idleTime}"-->
                                   <!--usePasswordPolicy="${ldap.usePpolicy:false}"-->
                                   <!--maxPoolSize="${ldap.pool.maxSize}"-->
                                   <!--minPoolSize="${ldap.pool.minSize}"-->
                                   <!--validatePeriodically="${ldap.pool.validatePeriodically}"-->
                                   <!--validatePeriod="${ldap.pool.validatePeriod}"-->
                                   <!--prunePeriod="${ldap.pool.prunePeriod}"-->
                                   <!--useSSL="${ldap.use.ssl:false}"-->
                                   <!--useStartTLS="${ldap.useStartTLS}"-->
    <!--/>-->

    <!-- ldap 新增  ldapAuthenticationHandler 开始-->
    <bean id="ldapAuthenticationHandler"
          class="org.jasig.cas.authentication.LdapAuthenticationHandler"
          p:principalIdAttribute="sAMAccountName"
          c:authenticator-ref="authenticator" />

    <util:map id="authenticationHandlersResolvers">
        <!-- ldap 新增 ldapAuthenticationHandler -->
        <entry key-ref="ldapAuthenticationHandler" value-ref="primaryPrincipalResolver" />

        <entry key-ref="proxyAuthenticationHandler" value-ref="proxyPrincipalResolver" />
        <entry key-ref="primaryAuthenticationHandler" value-ref="primaryPrincipalResolver" />
    </util:map>

    <util:list id="authenticationMetadataPopulators">
        <ref bean="successfulHandlerMetaDataPopulator" />
        <ref bean="rememberMeAuthenticationMetaDataPopulator" />
    </util:list>

    <bean id="attributeRepository" class="org.jasig.services.persondir.support.NamedStubPersonAttributeDao"
          p:backingMap-ref="attrRepoBackingMap" />

    <alias name="acceptUsersAuthenticationHandler" alias="primaryAuthenticationHandler" />
    <alias name="personDirectoryPrincipalResolver" alias="primaryPrincipalResolver" />

    <util:map id="attrRepoBackingMap">
        <entry key="uid" value="uid" />
        <entry key="eduPersonAffiliation" value="eduPersonAffiliation" />
        <entry key="groupMembership" value="groupMembership" />
        <entry>
            <key><value>memberOf</value></key>
            <list>
                <value>faculty</value>
                <value>staff</value>
                <value>org</value>
            </list>
        </entry>
    </util:map>

    <alias name="serviceThemeResolver" alias="themeResolver" />

    <alias name="jsonServiceRegistryDao" alias="serviceRegistryDao" />

    <alias name="defaultTicketRegistry" alias="ticketRegistry" />

    <alias name="ticketGrantingTicketExpirationPolicy" alias="grantingTicketExpirationPolicy" />
    <alias name="multiTimeUseOrTimeoutExpirationPolicy" alias="serviceTicketExpirationPolicy" />

    <alias name="anyAuthenticationPolicy" alias="authenticationPolicy" />
    <alias name="acceptAnyAuthenticationPolicyFactory" alias="authenticationPolicyFactory" />

    <bean id="auditTrailManager"
          class="org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager"
          p:entrySeparator="${cas.audit.singleline.separator:|}"
          p:useSingleLine="${cas.audit.singleline:false}"/>

    <alias name="neverThrottle" alias="authenticationThrottle" />

    <util:list id="monitorsList">
        <ref bean="memoryMonitor" />
        <ref bean="sessionMonitor" />
    </util:list>

    <alias name="defaultPrincipalFactory" alias="principalFactory" />
    <alias name="defaultAuthenticationTransactionManager" alias="authenticationTransactionManager" />
    <alias name="defaultPrincipalElectionStrategy" alias="principalElectionStrategy" />
    <alias name="tgcCipherExecutor" alias="defaultCookieCipherExecutor" />
</beans>
